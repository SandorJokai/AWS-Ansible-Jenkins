---
- hosts: music-streamer
  become: True
  pre_tasks:
    - name: stop apache if exists
      service: name=apache2 state=stopped
    - name: apt update
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    - name: docker install
      apt: name=docker.io state=latest
    # - name: install pip for python3
    #   apt: name=python3-pip state=absent
    # installing docker-compose with apt went wrong first because of dependencies
    - name: install pip for installing docker-compose
      apt: name=python-pip-whl state=latest
    # python-setup should be already installed
    - name: python-setuptools install
      apt: name=python-setuptools state=latest
    - name: install python3-pip module
      apt: name=python3-pip state=latest
    - name: install docker module
      pip: name=docker state=latest
    # pip must be upgraded before docker-compose will be installed
    - name: pip upgrade
      pip: name=pip state=forcereinstall
    - name: install docker-compose
      pip: name=docker-compose state=latest
#  roles:
#    - ampache-docker
  name: make workdir for ampache
  file:
    path: "{{ work_dir }}"
    state: directory

  name: copy files
  copy:
    src: "{{ files }}"
    dest: "{{ work_dir }}"
    mode: 0644
    
#- name: usermod
#  user:
#    name: ubuntu
#    groups: docker
#    append: yes

  name: build image
  docker_image:
    name: music-streamer
    build:
      path: "{{ work_dir }}"
    source: build
  name: run ampache container with docker-compose
  docker_compose:
    project_name: music-streamer
    definition:
      version: '3'
      services:
        db:
          image: mariadb:10
          restart: always
          volumes:
            - "db:/var/lib/mysql"
          environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: ampache
            MYSQL_USER: ampache
            MYSQL_PASSWORD: ampache
        web:
          image: music-streamer
          restart: always
          volumes:
#            - "ampache:{{ work_dir }}"
            - "ampache:/var/www/ampache"
          ports:
            - 80:80
          depends_on:
            - db
      volumes:
        db:
        ampache:
  register: output
